receivers:
  filelog:
    include: ${var:paths}
    start_at: beginning
    include_file_path: true
    include_file_name: false
    operators:
      # Operator to parse the container logs
      - type: container
        id: container-parser
        on_error: send_quiet # if it's not container logs ignore and proceed
      # Operator to parse the Nginx logs
      # This operator uses a regex to parse the logs
      - id: nginx-logs
        type: regex_parser
        regex: ^(?P<source_ip>\d+\.\d+.\d+\.\d+)\s+-\s+-\s+\[(?P<timestamp_log>[^\]]+)\] "(?P<http_method>\S+) (?P<http_path>\S+) (?P<http_version>[^"]+)" (?P<http_code>\d{3}) (?P<http_size>\d+) "(?P<referrer>[^"]*)" "(?P<user_agent>[^"]*)"
processors:
  transform/resource:
    log_statements:
      - set(log.attributes["resource"], "${var:resource}")
pipelines:
  logs:
    receiver: filelog
    processors:
      - transform/resource
